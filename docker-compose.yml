version: '3.8'

services:
  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: hackplatform-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - MONGODB_URL=${MONGODB_URL}
      - SECRET_KEY=${SECRET_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - AZURE_STORAGE_CONNECTION_STRING=${AZURE_STORAGE_CONNECTION_STRING}
    depends_on:
      - postgres
      - mongodb
      - redis
    volumes:
      - ./backend:/app
    networks:
      - hackplatform-network
    restart: unless-stopped

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hackplatform-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=http://localhost:3000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - hackplatform-network
    restart: unless-stopped

  # PostgreSQL Database (for local development)
  postgres:
    image: postgres:15-alpine
    container_name: hackplatform-postgres
    environment:
      POSTGRES_DB: hackathon_platform
      POSTGRES_USER: hackuser
      POSTGRES_PASSWORD: hackpass123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - hackplatform-network
    restart: unless-stopped

  # MongoDB (for announcements and flexible content)
  mongodb:
    image: mongo:7
    container_name: hackplatform-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: hackuser
      MONGO_INITDB_ROOT_PASSWORD: hackpass123
      MONGO_INITDB_DATABASE: hackathon_announcements
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - hackplatform-network
    restart: unless-stopped

  # Redis (for caching and session management)
  redis:
    image: redis:7-alpine
    container_name: hackplatform-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hackplatform-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Nginx (reverse proxy and load balancer)
  nginx:
    image: nginx:alpine
    container_name: hackplatform-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - hackplatform-network
    restart: unless-stopped

  # Database Admin Interface (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: hackplatform-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@hackplatform.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - hackplatform-network
    restart: unless-stopped

  # MongoDB Admin Interface (optional)
  mongo-express:
    image: mongo-express:latest
    container_name: hackplatform-mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: hackuser
      ME_CONFIG_MONGODB_ADMINPASSWORD: hackpass123
      ME_CONFIG_MONGODB_URL: mongodb://hackuser:hackpass123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - hackplatform-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  hackplatform-network:
    driver: bridge
